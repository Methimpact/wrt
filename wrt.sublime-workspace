{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"child",
				"child"
			],
			[
				"Config",
				"ConfigFile"
			],
			[
				"kVer",
				"kVeryVerbose"
			],
			[
				"kE",
				"kExitFailure"
			],
			[
				"libcon",
				"libconfig::Config"
			],
			[
				"kDefa",
				"kDefaultConfigFile"
			],
			[
				"kDefau",
				"kDefaultConfigFile"
			],
			[
				"Outpu",
				"Output::Verbosity"
			],
			[
				"kDe",
				"kDefault"
			],
			[
				"link",
				"link_local_ipv6_address_"
			],
			[
				"Access",
				"AccessPoint::AccessPoint"
			],
			[
				"auto",
				"auto"
			],
			[
				"target_",
				"target_file"
			],
			[
				"kCon",
				"kConfigurationFile"
			],
			[
				"kConfig",
				"kConfigDirectory"
			],
			[
				"hasLink",
				"hasLinkLocalIPv6"
			],
			[
				"known_hosts",
				"known_hosts_path"
			],
			[
				"known",
				"known_hosts"
			],
			[
				"kDeb",
				"kDebug3"
			],
			[
				"string",
				"string"
			],
			[
				"ex",
				"exit"
			],
			[
				"linkLoca",
				"getLinkLocalIPv4"
			],
			[
				"known_",
				"known_hosts_path"
			],
			[
				"know",
				"known_hosts"
			],
			[
				"kEx",
				"kExitSuccess"
			],
			[
				"Output",
				"Output::Verbosity"
			],
			[
				"Verbo",
				"Verbosity"
			],
			[
				"kAPIP",
				"kAPIPv6"
			],
			[
				"Type",
				"Type"
			],
			[
				"for",
				"for"
			],
			[
				"lib",
				"libconfig::Config"
			],
			[
				"v",
				"v"
			],
			[
				"Oup",
				"Output::Verbosity"
			],
			[
				"int",
				"int"
			],
			[
				"Debug",
				"Debug3"
			],
			[
				"Outp",
				"Output::Verbosity"
			],
			[
				"Out",
				"Output::Verbosity"
			],
			[
				"Verb",
				"Verbosity"
			],
			[
				"kDebu",
				"kDebug1"
			],
			[
				"Acces",
				"AccessPoint"
			],
			[
				"t_",
				"tl_mr3020"
			],
			[
				"AccessPoint",
				"AccessPoint::Type"
			],
			[
				"buffer",
				"buffer_size_"
			],
			[
				"stream",
				"stream_verbosity_"
			],
			[
				"verbo",
				"verbosity_"
			],
			[
				"WRTout",
				"WRTout"
			],
			[
				"Print",
				"PrintException"
			],
			[
				"getLink",
				"getLinkLocalIPv6"
			],
			[
				"kDefaul",
				"kDefaultLogLevel"
			],
			[
				"getIPv",
				"getIPv6"
			],
			[
				"tIP",
				"tIPv6"
			],
			[
				"hasLinkLo",
				"hasLinkLocalIPv6"
			],
			[
				"IP",
				"IPv4"
			],
			[
				"link_loca",
				"link_local_ipv4_address_"
			],
			[
				"ipv6",
				"ipv6_address_"
			],
			[
				"AccessPo",
				"AccessPoint::Type"
			],
			[
				"kVerbose",
				"kVerboseLogLevel"
			],
			[
				"List",
				"ListAPs"
			],
			[
				"ipv",
				"ipv6"
			],
			[
				"setIPv",
				"setIPv6"
			],
			[
				"wrt",
				"wrt54g"
			],
			[
				"mac",
				"mac"
			],
			[
				"const",
				"const"
			],
			[
				"MAC",
				"MACtoEUI64"
			],
			[
				"Mac",
				"MACAddress"
			],
			[
				"Acce",
				"AccessPoint"
			],
			[
				"k",
				"kConfigFile"
			],
			[
				"Key",
				"Key"
			],
			[
				"EUI",
				"MACtoEUI64"
			],
			[
				"sett",
				"setting"
			],
			[
				"Sessi",
				"Session"
			],
			[
				"Exception",
				"exception"
			],
			[
				"IPv",
				"IPv4Address"
			],
			[
				"Co",
				"Config"
			],
			[
				"pending",
				"pendingRemovals"
			],
			[
				"kRemo",
				"kRemoveList"
			],
			[
				"libconf",
				"libconfig::Setting"
			],
			[
				"libco",
				"libconfig::Config"
			],
			[
				"kAPIPv",
				"kAPIPv6"
			],
			[
				"libc",
				"libconfig::Setting"
			],
			[
				"fail",
				"failure_message"
			],
			[
				"libconfig",
				"libconfig::Config"
			],
			[
				"throw",
				"throw_with_nested"
			],
			[
				"error",
				"error_message"
			],
			[
				"thr",
				"throw_with_nested"
			],
			[
				"Log",
				"LogLevel"
			],
			[
				"libcio",
				"libconfig::Config"
			],
			[
				"erro",
				"error_message"
			],
			[
				"std",
				"std::cout"
			],
			[
				"Add",
				"Add"
			],
			[
				"kC",
				"kConfigFile"
			],
			[
				"kCo",
				"kConfigDirectory"
			],
			[
				"Rem",
				"Remove"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.hxx",
			"settings":
			{
				"buffer_size": 4358,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.cxx",
			"settings":
			{
				"buffer_size": 29229,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"buil",
				"Build: Build"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Package ",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"git push",
				"Git: Push Current Branch"
			],
			[
				"git commi",
				"Git: Commit"
			],
			[
				"git fe",
				"Git: Reset (unstage) Current File"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"Packag",
				"Package Control: Install Package"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Con",
				"Package Control: List Packages"
			],
			[
				"Pac",
				"Preferences: Browse Packages"
			]
		],
		"width": 398.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": true,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": true
	},
	"file_history":
	[
		"/home/wmillard/wrt/src/include/wrt_io.hxx",
		"/home/wmillard/wrt/src/include/wrt_exception.hxx",
		"/home/wmillard/wrt/src/lib/wrt/wrt_ap.cxx",
		"/home/wmillard/wrt/src/include/wrt_ap.hxx",
		"/home/wmillard/wrt/src/lib/wrt/wrt_io.cxx",
		"/home/wmillard/wrt/src/include/ssh_exception.hxx",
		"/home/wmillard/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/wmillard/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/wmillard/.config/sublime-text-3/Packages/User/Base File.sublime-settings",
		"/home/wmillard/.config/sublime-text-3/Packages/DocBlockr/Base File.sublime-settings",
		"/home/wmillard/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/wmillard/.config/sublime-text-3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
		"/home/wmillard/wrt/examples/wrt.cfg",
		"/home/wmillard/wrt/src/lib/wrt/wrt_log.cxx",
		"/home/wmillard/wrt/src/include/wrt_syslog.hxx",
		"/home/wmillard/.config/sublime-text-3/Packages/User/SublimeAStyleFormatter.sublime-settings",
		"/home/wmillard/.config/sublime-text-3/Packages/SublimeLinter/README.md",
		"/home/wmillard/wrt/wrt.sublime-project",
		"/home/wmillard/wrt/scripts/wrt.cfg",
		"/home/wmillard/wrt/src/lib/ssh/ssh_session.cxx",
		"/home/wmillard/wrt/src/lib/ssh/ssh_keys.cxx",
		"/home/wmillard/wrt/src/include/ssh_keys.hxx",
		"/home/wmillard/wrt/src/include/ssh_session.hxx",
		"/home/wmillard/wrt/README",
		"/home/wmillard/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/wmillard/wrt/src/main.cxx",
		"/home/wmillard/wrt/src/main.hxx"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
			"<open files>,/home/wmillard/wrt/src"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"WriteConfig",
			",",
			"optind",
			"config",
			"PrintAP",
			"OutputLevel",
			"ReadConfigFile",
			"OutputLevel",
			"auto",
			"OutputLevel",
			"ReadConfigFile",
			"OutputLevel",
			"addList",
			"wrt::",
			"[]",
			"getAddList",
			"writeCon",
			"writeConfigFile",
			"GetAddList",
			"GetAPList",
			"//",
			"GetAPList",
			"Output::Verbosity operator-- (Output::Verbosity v);\n",
			"OutputLevel",
			"cout",
			"Verbosity",
			"os",
			"os.",
			"WRTclog",
			"getrawtype",
			"ListAP",
			"Log",
			"getrawtype",
			"GetAddList",
			"ListAP",
			"APList",
			" const",
			"const",
			"ipv6_address",
			"ipv4_address",
			"mac_address",
			"ap_name",
			"_c_session",
			"removeAP",
			"230",
			"GetAPList",
			"ParseAPList",
			"}\n",
			"ConfigFile",
			"ListManagedAPs",
			"368"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			";",
			"   ",
			"",
			"VerbosityLevel",
			"Syslog",
			"",
			"ipv6_address_",
			"ipv4_address_",
			"mac_address_",
			"ap_name_",
			"c_session_",
			"ListAPs"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.hxx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4358,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"spell_check": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1980.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.cxx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29229,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12660.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 120.0
	},
	"output.git":
	{
		"height": 120.0
	},
	"project": "wrt.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/wrt/wrt.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 160.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
